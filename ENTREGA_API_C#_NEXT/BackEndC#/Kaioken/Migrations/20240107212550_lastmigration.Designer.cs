// <auto-generated />
using Kaioken.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kaioken.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240107212550_lastmigration")]
    partial class Lastmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Kaioken.Model.Viajante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("viajantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "12345678900",
                            Email = "gabriel@email.com",
                            Name = "Gabriel",
                            Telefone = "11987170171"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "12345678901",
                            Email = "bruna@email.com",
                            Name = "Bruna",
                            Telefone = "11987170172"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "12345678902",
                            Email = "guilherme@email.com",
                            Name = "Guilherme",
                            Telefone = "11987170173"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "12345678903",
                            Email = "beatriz@email.com",
                            Name = "Beatriz",
                            Telefone = "11987170174"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
